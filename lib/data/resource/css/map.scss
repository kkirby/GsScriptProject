@function Map($import...){
	$map: (map,(),());
	@if length($import) > 0 {
		@each $kv in $import {
			$map: MapSetKey($map,nth($kv,1),nth($kv,2));
		}
	}
	@return $map;
}

@function IsMap($map){
	@if nth($map,1) == map and length($map) == 3 {
		@return true;
	}
	@else {
		@return false;
	}
}

@function MapSetKey($map,$key,$value){
	@if IsMap($map) == false {
		@warn "Map not provided.";
		@return null;
	}
	$keys: nth($map,2);
	$values: nth($map,3);
	$keyIndex: index($keys,$key);
	@if $keyIndex == null {
		$keys: append($keys,$key);
		$values: append($values,$value);
	}
	@else {
		$length: length($keys);
		$tmp: ();
		@for $i from 1 through $length {
			@if $i == $keyIndex {
				$tmp: append($tmp,$value);
			}
			@else {
				$tmp: append($tmp,nth($values,$i));
			}
		}
		$values: $tmp;
	}
	@return (map,$keys,$values);
}

@function MapGetValue($map,$key,$default: false){
	@if IsMap($map) == false  {
		@return $default;
	}
	$keys: nth($map,2);
	$values: nth($map,3);
	$keyIndex: index($keys,$key);
	@if $keyIndex != false {
		@return nth($values,$keyIndex);
	}
	@return $default;
}

@function MapGetKeys($map){
	@if IsMap($map) == false {
		@warn "Map not provided.";
		@return null;
	}
	@return nth($map,2);
}
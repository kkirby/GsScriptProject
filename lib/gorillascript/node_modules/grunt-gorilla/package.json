{
  "name": "grunt-gorilla",
  "description": "Compile GorillaScript files to JavaScript.",
  "version": "0.1.6",
  "homepage": "https://github.com/ckknight/grunt-gorilla",
  "author": {
    "name": "Cameron Kenneth Knight",
    "email": "ckknight@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/ckknight/grunt-gorilla.git"
  },
  "bugs": {
    "url": "https://github.com/ckknight/grunt-gorilla/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/ckknight/grunt-gorilla/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "dependencies": {
    "gorillascript": "~0.8.13"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-contrib-internal": "~0.4.5"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "gorilla"
  ],
  "contributors": [
    {
      "name": "Cameron Kenneth Knight",
      "url": "http://github.com/ckknight"
    }
  ],
  "readme": "# grunt-gorilla\n\n> Compile GorillaScript files to JavaScript.\n\n\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-gorilla --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-gorilla');\n```\n\n*This plugin was designed to work with Grunt 0.4.x. If you're still using grunt v0.3.x it's strongly recommended that [you upgrade](http://gruntjs.com/upgrading-from-0.3-to-0.4).*\n\n\n## Gorilla task\n_Run this task with the `grunt gorilla` command._\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](http://gruntjs.com/configuring-tasks) guide.\n\n### Options\n\n#### linefeed\nType: `String`\nDefault: on Windows, `\"\\r\\n\"`, otherwise `\"\\n\"`\n\nCompilation will use this to join lines.\n\n#### bare\nType: `boolean`\n\nCompile the JavaScript without the top-level function safety wrapper.\n\n#### sourceMap\nType: `boolean`\nDefault: `false`\n\nCompile JavaScript and create a .map file linking it to the GorillaScript source.\n\n#### sourceRoot\nType: `string`\nDefault: `\"\"`\n\nSpecify the `sourceRoot` property in the created .map file.\n\n#### encoding\nType: `string`\nDefault: `grunt.file.defaultEncoding`, which is `\"utf8\"` unless overridden.\n\nThe encoding of the resultant .js files. Not recommended to change.\n\n#### overwrite\nType: `boolean`\nDefault: `false`\n\nCompile and overwrite .js files even if they don't appear to be out-of-date.\n\n#### coverage\nType: `boolean`\nDefault: `false`\n\nInstruments output .js files with `_$jscoverage` support.\n\n### Usage Examples\n\n```js\ngorilla: {\n  compile: {\n    files: {\n      'path/to/result.js': 'path/to/source.gs', // 1:1 compile\n      'path/to/another.js': ['path/to/sources/*.gs', 'path/to/more/*.gs'] // compile into single file\n    }\n  },\n\n  compileBare: {\n    options: {\n      bare: true\n    },\n    files: {\n      'path/to/result.js': 'path/to/source.gs', // 1:1 compile\n      'path/to/another.js': ['path/to/sources/*.gs', 'path/to/more/*.gs'] // compile into single file\n    }\n  },\n  \n  compileWithMaps: {\n    options: {\n      sourceMap: true,\n      sourceRoot: \"path/to\" // defaults to \"\"\n    },\n    files: {\n      'path/to/result.js': 'path/to/source.gs', // 1:1 compile\n      'path/to/another.js': ['path/to/sources/*.gs', 'path/to/more/*.gs'] // compile into single file\n    }\n  },\n\n  glob_to_multiple: {\n    expand: true,\n    flatten: true,\n    cwd: 'path/to',\n    src: ['*.gs'],\n    dest: 'path/to/dest/',\n    ext: '.js'\n  }\n}\n```\n\nFor more examples on how to use the `expand` API to manipulate the default dynamic path construction in the `glob_to_multiple` examples, see \"Building the files object dynamically\" in the grunt wiki entry [Configuring Tasks](http://gruntjs.com/configuring-tasks).\n\n\n## Release History\n\n * 2013-05-29   v0.1.5   Add the \"coverage\" option\n * 2013-05-27   v0.1.4   Bugfix with the needs-compiling check\n * 2013-05-27   v0.1.3   Add more logging, and a nice display in verbose mode. Only compile files if the mtime of the .gs is more than that of its .js Add the \"overwrite\" option, to override the \"only-compile-when\" check.\n * 2013-05-26   v0.1.2   Add the \"encoding\" option, defaulting to `grunt.file.default-encoding`\n * 2013-05-26   v0.1.1   Task is now run asynchronously\n * 2013-05-26   v0.1.0   Initial release\n\n---\n\nTask submitted by [Cameron Kenneth Knight](http://github.com/ckknight)\n\n*This file was generated on Wed May 29 2013 23:52:26.*\n",
  "readmeFilename": "README.md",
  "_id": "grunt-gorilla@0.1.6",
  "dist": {
    "shasum": "e4d5f3cf11fdcbcc8ca5131786be5b72f46b8847",
    "tarball": "http://registry.npmjs.org/grunt-gorilla/-/grunt-gorilla-0.1.6.tgz"
  },
  "_from": "grunt-gorilla@>=0.1.2 <0.2.0",
  "_npmVersion": "1.2.18",
  "_npmUser": {
    "name": "ckknight",
    "email": "ckknight@gmail.com"
  },
  "maintainers": [
    {
      "name": "ckknight",
      "email": "ckknight@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "e4d5f3cf11fdcbcc8ca5131786be5b72f46b8847",
  "_resolved": "https://registry.npmjs.org/grunt-gorilla/-/grunt-gorilla-0.1.6.tgz"
}
